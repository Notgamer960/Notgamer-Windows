local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ESP_GUI"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local ButtonFrame = Instance.new("Frame")
ButtonFrame.Size = UDim2.new(0, 170, 0, 130)
ButtonFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
ButtonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ButtonFrame.Active = true
ButtonFrame.Draggable = true
ButtonFrame.Parent = ScreenGui

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(1, -20, 0, 50)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "Toggle Names"
ToggleButton.Parent = ButtonFrame
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local TracerButton = Instance.new("TextButton")
TracerButton.Size = UDim2.new(1, -20, 0, 50)
TracerButton.Position = UDim2.new(0, 10, 0, 70)
TracerButton.Text = "Toggle Tracers"
TracerButton.Parent = ButtonFrame
TracerButton.BackgroundColor3 = Color3.fromRGB(50, 100, 50)
TracerButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local MasterToggle = Instance.new("TextButton")
MasterToggle.Size = UDim2.new(0, 120, 0, 30)
MasterToggle.Position = UDim2.new(0, 850, 0, -40)
MasterToggle.Text = "Hide Highlighter Menu"
MasterToggle.Parent = ScreenGui
MasterToggle.BackgroundColor3 = Color3.fromRGB(100, 50, 50)
MasterToggle.TextColor3 = Color3.fromRGB(255, 255, 255)

local frameVisible = true
MasterToggle.MouseButton1Click:Connect(function()
	frameVisible = not frameVisible
	ButtonFrame.Visible = frameVisible
	if frameVisible then
		MasterToggle.Text = "Hide Highlighter Menu"
	else
		MasterToggle.Text = "Show Highlighter Menu"
	end
end)

local ESPEnabled = false
local keywords = { "chest", "treasure", "coal", "gas", "oil", "fuel" }

local customNames = {
	["Item Chest"] = "Wooden Chest",
	["ItemChest"] = "Wooden Chest",
	["Item Chest2"] = "Good Chest",
	["ItemChest2"] = "Good Chest",
	["Item Chest3"] = "Iron Chest",
	["ItemChest3"] = "Iron Chest",
	["Item Chest4"] = "Legendary Chest",
	["ItemChest4"] = "Legendary Chest",
	["ItemChest5"] = "Gold Chest",
	["Item Chest5"] = "Gold Chest",
	["ItemChest6"] = "Ruby Chest",
	["Item Chest6"] = "Ruby Chest",
}

local excname = {
	["Chest Lid"] = "",
	["ChestLid"] = "",
	["Chest lid"] = "",
	["chest lid"] = "",
	["Chestlid"] = "",
	["chestlid"] = "",
	["Item"] = "",
	["item"] = "",
}

local function isTargetModel(model)
	if not model:IsA("Model") then return false end
	if excname[model.Name] ~= nil then return false end

	local name = string.lower(model.Name)
	for _, word in ipairs(keywords) do
		if string.find(name, word) then
			return true
		end
	end
	return false
end

local function addESP(model)
	if isTargetModel(model) then
		if not model:FindFirstChild("ESP_Billboard") then
			local attachPart = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
			if attachPart then
				local billboard = Instance.new("BillboardGui")
				billboard.Name = "ESP_Billboard"
				billboard.AlwaysOnTop = true
				billboard.Size = UDim2.new(0, 120, 0, 50)
				billboard.StudsOffset = Vector3.new(0, 3, 0)
				billboard.Adornee = attachPart
				billboard.Parent = model

				local label = Instance.new("TextLabel")
				label.Size = UDim2.new(1, 0, 1, 0)
				label.BackgroundTransparency = 1
				label.Text = customNames[model.Name] or model.Name
				label.TextColor3 = Color3.fromRGB(170, 0, 255)
				label.TextStrokeTransparency = 0
				label.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
				label.TextScaled = true
				label.Parent = billboard
			end
		end
	end
end

local loopConnection
local function enableESP()
	for _, obj in ipairs(workspace:GetDescendants()) do
		addESP(obj)
	end
	loopConnection = RunService.Heartbeat:Connect(function()
		for _, obj in ipairs(workspace:GetDescendants()) do
			addESP(obj)
		end
	end)
end

local function disableESP()
	if loopConnection then
		loopConnection:Disconnect()
		loopConnection = nil
	end
	for _, model in ipairs(workspace:GetDescendants()) do
		local esp1 = model:FindFirstChild("ESP_Billboard")
		if esp1 then esp1:Destroy() end
		local esp2 = model:FindFirstChild("ESP_Highlight")
		if esp2 then esp2:Destroy() end
	end
end

ToggleButton.MouseButton1Click:Connect(function()
	ESPEnabled = not ESPEnabled
	if ESPEnabled then
		ToggleButton.Text = "Names ON"
		enableESP()
	else
		ToggleButton.Text = "Names OFF"
		disableESP()
	end
end)

local TracerEnabled = false
local tracerConnection
local tracerFolder = Instance.new("Folder", workspace)
tracerFolder.Name = "ESP_Tracers"

local function clearTracers()
	tracerFolder:ClearAllChildren()
end

local function drawTracers()
	clearTracers()
	local char = LocalPlayer.Character
	if not char then return end
	local head = char:FindFirstChild("Head")
	if not head then return end

	for _, model in ipairs(workspace:GetDescendants()) do
		if isTargetModel(model) then
			local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
			if part then
				local attachment0 = Instance.new("Attachment", head)
				local attachment1 = Instance.new("Attachment", part)

				local beam = Instance.new("Beam")
				beam.Color = ColorSequence.new(Color3.fromRGB(0,255,0))
				beam.FaceCamera = true
				beam.Width0 = 0.1
				beam.Width1 = 0.1
				beam.Attachment0 = attachment0
				beam.Attachment1 = attachment1
				beam.Parent = tracerFolder
			end
		end
	end
end

local function enableTracers()
	tracerConnection = RunService.Heartbeat:Connect(drawTracers)
end

local function disableTracers()
	if tracerConnection then tracerConnection:Disconnect() tracerConnection = nil end
	clearTracers()
end

TracerButton.MouseButton1Click:Connect(function()
	TracerEnabled = not TracerEnabled
	if TracerEnabled then
		TracerButton.Text = "Tracers ON"
		enableTracers()
	else
		TracerButton.Text = "Tracers OFF"
		disableTracers()
	end
end)
